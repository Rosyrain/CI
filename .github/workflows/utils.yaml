# Define workflow name.
name: MatrixOne Utils CI

on:
  workflow_dispatch:
    inputs:
      base_repository:
        description: 'Base repository (e.g., matrixorigin/matrixone)'
        required: true
        default: "matrixorigin/matrixone"
      base_ref:
        description: 'Base branch (e.g., main)'
        required: true
        default: "main"
      head_repository:
        description: 'Head repository (e.g., Rosyrain:matrixone)'
        required: true
        default: "xxx/matrixone"
      head_repo_owner:
        description: 'Head repository owner (e.g., Rosyrain)'
        required: true
        default: "xxx"
      head_ref:
        description: 'Head branch (e.g., test)'
        required: true
        default: "main"

jobs:
  pr_coverage:
    name: PR Unit and BVT Test Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "1"
          path: ./matrixone
          repository: ${{ inputs.head_repository }}
          ref: ${{ inputs.head_ref }}
      - name: Generate diff.patch
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          retry_times=5
          delay=3
          url="https://github.com/${{ inputs.base_repository }}/compare/${{ inputs.base_ref }}...${{ inputs.head_repo_owner }}:matrixone:${{ inputs.head_ref }}.diff"
          for ((i = 1; i <= retry_times; i++)); do
            echo "url: $url"
            if curl -f --max-time 10 -L -o diff.patch $url;then
              echo "Get diff.patch success..."
              exit 0
            fi
            echo "Get diff.patch failed...Retrying in 3 seconds..."
            sleep $delay
          done
          echo "Max retries reached. Failed."
          exit 1
      - name: Parepare file
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          echo "mode:set" >> ut_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 1" >> ut_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 0" >> ut_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 1" >> ut_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 1" >> bvt_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 1" >> bvt_coverage.out
          echo "github.com/matrixorigin/matrixone/cmd/mo-service/config.go:161.26,175.2 1 1" >> bvt_coverage.out

      - name: Check Coverage(compare with branch main)
        uses: Rosyrain/CI_test/actions/check-coverage@main
        with:
          type: open
          ut_coverage_file: ${{ github.workspace }}/matrixone/ut_coverage.out
          bvt_coverage_file: ${{ github.workspace }}/matrixone/bvt_coverage.out
          #commit_id: ${{ github.event.pull_request.head.sha }}
          commit_id: '000001'
          branch: 'main'
          mo_host: freetier-01.cn-hangzhou.cluster.matrixonecloud.cn
          mo_port: 6001
          mo_user: 01918e17-faae-72bf-8fb8-acf95135efd8:admin:accountadmin
          mo_password: Jx20031002
          mo_database: mo_coverage
      - name: Set up Go and JAVA
        uses: matrixorigin/CI/actions/setup-env@main
        with:
          setup-java: false
      - name: Set Variables
        run: |
          echo "ut_report='UT-Report.out'" >> $GITHUB_ENV
          echo "raw_ut_coverage='ut_coverage.raw'" >> $GITHUB_ENV
          echo "raw_bvt_coverage='bvt_coverage.raw'" >> $GITHUB_ENV
          echo "ut_coverage='ut_coverage.out'" >> $GITHUB_ENV
          echo "bvt_coverage='bvt_coverage.out'" >> $GITHUB_ENV
          echo "ut_html_coverage='ut_coverage.html'" >> $GITHUB_ENV
          echo "bvt_html_coverage='bvt_coverage.html'" >> $GITHUB_ENV
          echo "ut_excluded_pkg='pkg/pb\|pkg/sql/parsers/goyacc\|yaccpar'" >> $GITHUB_ENV
          echo "bvt_excluded_pkg='pkg/pb\|yaccpar'" >> $GITHUB_ENV

      - name: Set JAVA PATH
        run: |
          echo "$JAVA_HOME/bin" >> $GITHUB_PATH

      - name: Clone test-tool repository
        uses: actions/checkout@v4
        with:
          repository: matrixorigin/mo-tester
          path: ./mo-tester
          ref: main
      - name: Start Unit Test
        timeout-minutes: 45
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          test_scope=$(go list ./... | grep -v 'driver\|engine/aoe\|engine/memEngine\|pkg/catalog')
          make clean && make config && make cgo
          echo "ut start"
          CGO_CFLAGS="-I${GITHUB_WORKSPACE}/matrixone/cgo" CGO_LDFLAGS="-L${GITHUB_WORKSPACE}/matrixone/cgo -lmo" go test -v -tags matrixone_test -p 6 -covermode=set -coverprofile=${{ env.raw_ut_coverage }} -coverpkg=./... ${test_scope} | tee ${{ env.ut_report }}
          echo "ut finished"
      - name: Start BVT Test Service
        if: ${{ always() && !cancelled() }}
        timeout-minutes: 10
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          sed -i.bak 's/level = "info"/level = "error"/g'  ./etc/launch/log.toml
          if  [ -d  "./store"  ]; then rm -rf ./store; fi
          GOLDFLAGS=-ldflags="-X 'main.GoVersion=$(go version)' -X 'main.BranchName=$(git rev-parse --abbrev-ref HEAD)' -X 'main.CommitID=$(git rev-parse HEAD)' -X 'main.BuildTime=$(date)' -X 'main.Version=$(git describe --always --tags $(git rev-list --tags --max-count=1))'"
          export GOCOVERDIR=$GITHUB_WORKSPACE/matrixone
          go build -cover "$GOLDFLAGS" -o mo-service ./cmd/mo-service/
          ./optools/run_bvt.sh $GITHUB_WORKSPACE/matrixone launch
      - name: Start BVT Test
        timeout-minutes: 30
        if: ${{ always() && !cancelled() }}
        id: bvt_on_pr_version
        run: |
          export LC_ALL="C.UTF-8"
          locale

          cd $GITHUB_WORKSPACE/mo-tester
          sed -i 's/  port: [0-9]*/  port: 12345/g' mo.yml
          cat mo.yml
          echo "============================"

          ./run.sh -n -g -o -p $GITHUB_WORKSPACE/matrixone/test/distributed/cases -e optimistic 2>&1


      - name: Generate UT and BVT Coverage File
        if: ${{ always() && !cancelled() }}
        timeout-minutes: 10
        run: |
          cd $GITHUB_WORKSPACE/matrixone
          cat ${{ env.raw_ut_coverage }} | grep -v ${{ env.ut_excluded_pkg }} > ${{ env.ut_coverage }}
          echo "ut_coverage finished"
          go tool cover -o ${{ env.ut_html_coverage }} -html=${{ env.ut_coverage }}
          echo "ut_html_coverage finished"
          #rm -rf ${{ env.raw_ut_coverage }}
          ps -aux | grep 'mo-service' | grep -v 'grep' | awk '{print $2}' | xargs kill -s SIGINT
          i=1 && while [ -n "$(ps -aux|grep 'mo-service' | grep -v 'grep' | awk '{print $2}')" ] && [ $i -le 300 ]; do echo "mo-service kill not finished......$i/300"; i=$(($i+1)); sleep 1s; done
          if [ $i -gt 300 ]; then echo 'stop mo-service failed...'; exit 1; else echo 'stop mo-service successed...'; fi
          go tool covdata textfmt -i="$GITHUB_WORKSPACE/matrixone" -o ${{ env.raw_bvt_coverage }}
          cat ${{ env.raw_bvt_coverage }} | grep -v ${{ env.bvt_excluded_pkg }} > ${{ env.bvt_coverage }}
          echo "bvt_coverage finished"
          go tool cover -o ${{ env.bvt_html_coverage }} -html=${{ env.bvt_coverage }}
          echo "bvt_html_coverage finished"

      - name: Checkout for Python file
        uses: actions/checkout@v3
        with:
          repository: matrixorigin/CI
          fetch-depth: "1"
          path: CI
      - name: Get Python file
        run: |
          cd $GITHUB_WORKSPACE
          cp $GITHUB_WORKSPACE/CI/scripts/parse_coverage.py $GITHUB_WORKSPACE/parse_coverage.py
      - name: Run coverage Python script
        run: |
          cd $GITHUB_WORKSPACE
          python $GITHUB_WORKSPACE/parse_coverage.py -coverage_files $GITHUB_WORKSPACE/matrixone/ut_coverage.out $GITHUB_WORKSPACE/matrixone/bvt_coverage.out -diff_path $GITHUB_WORKSPACE/matrixone/diff.patch

      - name: Compress final result files
        id: compress_result
        if: ${{ always() && !cancelled() }}
        continue-on-error: true
        run: |
          cd $GITHUB_WORKSPACE
          if [ ! -f "$GITHUB_WORKSPACE/pr_coverage.out" ]; then
            echo "pr_coverage.out does not exist.The code block has not changed,skip the remaining steps."
            echo "file_exists=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "file_exists=true" >> $GITHUB_OUTPUT
          
          cd $GITHUB_WORKSPACE/matrixone
          cp $GITHUB_WORKSPACE/pr_coverage.out $GITHUB_WORKSPACE/matrixone/pr_coverage.out
          go tool cover -o pr_coverage.html -html=pr_coverage.out

      - name: Get All Middle Files
        if: ${{ always() && !cancelled() }}
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p all_middle_files
          
          #sort $GITHUB_WORKSPACE/matrixone/UT-Report.out | uniq > $GITHUB_WORKSPACE/all_middle_files/UT-Report-sort.out
          #sort $GITHUB_WORKSPACE/matrixone/ut_coverage.raw | uniq > $GITHUB_WORKSPACE/all_middle_files/ut_coverage_sort.raw
          #cp $GITHUB_WORKSPACE/matrixone/bvt_coverage.raw $GITHUB_WORKSPACE/all_middle_files/bvt_coverage.raw
          #cp $GITHUB_WORKSPACE/matrixone/ut_coverage.html $GITHUB_WORKSPACE/all_middle_files/ut_coverage.html
          #cp $GITHUB_WORKSPACE/matrixone/bvt_coverage.html $GITHUB_WORKSPACE/all_middle_files/bvt_coverage.html
          #cp $GITHUB_WORKSPACE/matrixone/ut_coverage.out $GITHUB_WORKSPACE/all_middle_files/ut_coverage.out
          sort $GITHUB_WORKSPACE/matrixone/ut_coverage.out | uniq > $GITHUB_WORKSPACE/all_middle_files/ut_coverage_sort.out
          cp $GITHUB_WORKSPACE/matrixone/bvt_coverage.out $GITHUB_WORKSPACE/all_middle_files/bvt_coverage.out
          
          cp $GITHUB_WORKSPACE/matrixone/diff.patch $GITHUB_WORKSPACE/all_middle_files/diff.patch
          
          if [ -f "$GITHUB_WORKSPACE/pr_coverage.out" ]; then
            cp $GITHUB_WORKSPACE/pr_coverage.out $GITHUB_WORKSPACE/all_middle_files/pr_coverage.out
            cp $GITHUB_WORKSPACE/matrixone/pr_coverage.html $GITHUB_WORKSPACE/all_middle_files/pr_coverage.html
          fi
          cp $GITHUB_WORKSPACE/merged_coverage.out $GITHUB_WORKSPACE/all_middle_files/merged_coverage.out

      - name: Upload All Middle
        uses: actions/upload-artifact@v4
        if: ${{ always() && !cancelled() }}
        with:
          name: all-middle-files
          path: ${{ github.workspace }}/all_middle_files
          retention-days: 7
